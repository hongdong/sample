//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 color palettes.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 0 files.
  struct file {
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 9 images.
  struct image {
    /// Image `btn_minus_normal`.
    static let btn_minus_normal = Rswift.ImageResource(bundle: R.hostingBundle, name: "btn_minus_normal")
    /// Image `btn_plus_normal`.
    static let btn_plus_normal = Rswift.ImageResource(bundle: R.hostingBundle, name: "btn_plus_normal")
    /// Image `ic_right`.
    static let ic_right = Rswift.ImageResource(bundle: R.hostingBundle, name: "ic_right")
    /// Image `ic_select`.
    static let ic_select = Rswift.ImageResource(bundle: R.hostingBundle, name: "ic_select")
    /// Image `ic_selected`.
    static let ic_selected = Rswift.ImageResource(bundle: R.hostingBundle, name: "ic_selected")
    /// Image `purchase_icon_alipay`.
    static let purchase_icon_alipay = Rswift.ImageResource(bundle: R.hostingBundle, name: "purchase_icon_alipay")
    /// Image `purchase_icon_applepay`.
    static let purchase_icon_applepay = Rswift.ImageResource(bundle: R.hostingBundle, name: "purchase_icon_applepay")
    /// Image `purchase_icon_unionpay`.
    static let purchase_icon_unionpay = Rswift.ImageResource(bundle: R.hostingBundle, name: "purchase_icon_unionpay")
    /// Image `purchase_icon_wechat`.
    static let purchase_icon_wechat = Rswift.ImageResource(bundle: R.hostingBundle, name: "purchase_icon_wechat")
    
    /// `UIImage(named: "btn_minus_normal", bundle: ..., traitCollection: ...)`
    static func btn_minus_normal(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.btn_minus_normal, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "btn_plus_normal", bundle: ..., traitCollection: ...)`
    static func btn_plus_normal(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.btn_plus_normal, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ic_right", bundle: ..., traitCollection: ...)`
    static func ic_right(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ic_right, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ic_select", bundle: ..., traitCollection: ...)`
    static func ic_select(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ic_select, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ic_selected", bundle: ..., traitCollection: ...)`
    static func ic_selected(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ic_selected, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "purchase_icon_alipay", bundle: ..., traitCollection: ...)`
    static func purchase_icon_alipay(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.purchase_icon_alipay, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "purchase_icon_applepay", bundle: ..., traitCollection: ...)`
    static func purchase_icon_applepay(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.purchase_icon_applepay, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "purchase_icon_unionpay", bundle: ..., traitCollection: ...)`
    static func purchase_icon_unionpay(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.purchase_icon_unionpay, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "purchase_icon_wechat", bundle: ..., traitCollection: ...)`
    static func purchase_icon_wechat(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.purchase_icon_wechat, compatibleWith: traitCollection)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 0 nibs.
  struct nib {
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 2 reuse identifiers.
  struct reuseIdentifier {
    /// Reuse identifier `HDPaymentCell`.
    static let hDPaymentCell: Rswift.ReuseIdentifier<HDPaymentCell> = Rswift.ReuseIdentifier(identifier: "HDPaymentCell")
    /// Reuse identifier `HDProductCell`.
    static let hDProductCell: Rswift.ReuseIdentifier<HDProductCell> = Rswift.ReuseIdentifier(identifier: "HDProductCell")
    
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
  struct segue {
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    /// Storyboard `Main`.
    static let main = _R.storyboard.main()
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    /// `UIStoryboard(name: "Main", bundle: ...)`
    static func main(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.main)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 0 localization tables.
  struct string {
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      try _R.validate()
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R: Rswift.Validatable {
  static func validate() throws {
    try storyboard.validate()
  }
  
  struct nib {
    fileprivate init() {}
  }
  
  struct storyboard: Rswift.Validatable {
    static func validate() throws {
      try main.validate()
    }
    
    struct launchScreen: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIKit.UIViewController
      
      let bundle = R.hostingBundle
      let name = "LaunchScreen"
      
      fileprivate init() {}
    }
    
    struct main: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UIKit.UINavigationController
      
      let bundle = R.hostingBundle
      let name = "Main"
      
      static func validate() throws {
        if UIKit.UIImage(named: "ic_right") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'ic_right' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "btn_minus_normal") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'btn_minus_normal' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "ic_select") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'ic_select' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "purchase_icon_alipay") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'purchase_icon_alipay' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "btn_plus_normal") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'btn_plus_normal' is used in storyboard 'Main', but couldn't be loaded.") }
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}
